name: Build and publish Oracle Linux developer container images to GitHub Container Registry

# Builds are triggered either by:
#   - a push on the master branch with changes in this file or in the
#     OracleLinuxDevelopers directory.
#     All container images will be (re)built.
#   - a manual trigger of the workflow using the API.
#     Subset of OL version / language can be specified; default is to build
#     all images.
# Images are build for both amd64 and arm64 architectures, except for
#   - oracledb images (not available on arm)
#   - php and nodejs on OL7 (packages not available)
on:
  push:
    branches:
      - master
      - build-tags
    paths:
      - 'OracleLinuxDevelopers/**'
      - '.github/workflows/build-and-push-dev-images.yml'
  workflow_dispatch:
    inputs:
      ol:
        description: List of ol versions to build
        default: 'oraclelinux7, oraclelinux8'
        required: false
      lang:
        description: List of languages to build
        default: 'golang, nodejs, php, python'
        required: false

# Default values for the builds triggered by the push event
env:
  # ol: 'oraclelinux7, oraclelinux8'
  # lang: 'golang, nodejs, php, python'
  ol: 'oraclelinux7'
  lang: 'python'

jobs:
  prepare:
    name: Build os/language matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
      repository_owner: ${{ steps.repository_owner.outputs.repository_owner }}
      date_stamp: ${{ steps.date_stamp.outputs.date_stamp }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build matrix
        id: build-matrix
        working-directory: OracleLinuxDevelopers
        run: |
          ol_list=$(echo "${{ github.event.inputs.ol || env.ol}}" | sed -e 's/[ ,]\+/ /g')
          lang_list=$(echo "${{ github.event.inputs.lang || env.lang}}" | sed -e 's/[ ,]\+/ /g')
          matrix=$(
            for ol in ${ol_list}; do
              pushd "${ol}" >/dev/null
                for lang in ${lang_list}; do
                  pushd "${lang}" >/dev/null
                    for tag in *; do
                      arch="linux/amd64"
                      multi=0
                      if [[ ! ${tag} =~ oracledb && ! ( ${ol} = "oraclelinux7" && ${lang} =~ ^(nodejs|php)$ ) ]]; then
                        arch="${arch},linux/arm64"
                        multi=1
                      fi
                      echo "${ol};${lang};${tag};${arch};${multi}"
                    done
                  popd >/dev/null
                done
              popd >/dev/null
            done | jq --slurp --raw-input --compact-output '
              split("\n") |
              .[:-1] |
              map(split(";")) |
              map({"ol": .[0], "lang": .[1], "tag": .[2], "arch": .[3], "multi": (.[4] == "1")}) |
              { "include": .}'
          )
          echo "::set-output name=matrix::${matrix}"

      - name: Lowercase repository owner
        id: repository_owner
        run: |
          echo "::set-output name=repository_owner::$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')"

      - name: Date stamp
        id: date_stamp
        run: |
          echo "::set-output name=date_stamp::$(date +'%Y%m%d-%H%M')"

  build-images:
    name: Build and push images
    needs: prepare
    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v2
        if: ${{ false }}
        with:
          context: OracleLinuxDevelopers/${{ matrix.ol }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: ${{ matrix.arch }}
          push: true
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}"

      - name: Build image - amd64
        uses: docker/build-push-action@v2
        if: ${{ ! matrix.multi }}
        with:
          context: OracleLinuxDevelopers/${{ matrix.ol }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: linux/amd64
          push: true
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}"

      - name: Build image - amd64 multi
        uses: docker/build-push-action@v2
        if: matrix.multi
        with:
          context: OracleLinuxDevelopers/${{ matrix.ol }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: arch="linux/amd64"
          push: true
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-amd64-${{ needs.prepare.outputs.date_stamp }}"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-amd64"

      - name: Build image - arm64
        uses: docker/build-push-action@v2
        if: matrix.multi
        with:
          context: OracleLinuxDevelopers/${{ matrix.ol }}/${{ matrix.lang }}/${{ matrix.tag }}
          platforms: arch="linux/arm64"
          push: true
          tags: |
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-arm64-${{ needs.prepare.outputs.date_stamp }}"
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-arm64"

      - name: Manifest
        if: matrix.multi
        run: |
          docker buildx imagetools create -t \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-${{ needs.prepare.outputs.date_stamp }}" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-amd64-${{ needs.prepare.outputs.date_stamp }}" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-arm64-${{ needs.prepare.outputs.date_stamp }}"
          docker buildx imagetools create -t \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-amd64" \
            "ghcr.io/${{ needs.prepare.outputs.repository_owner }}/${{ matrix.ol }}-${{ matrix.lang }}:${{ matrix.tag }}-arm64"
